// ==========================================================================
// Project:   Fireplace
// Copyright: Â©2013 Richard Livsey and contributors.
// License:   Licensed under MIT license (see license.js)
// ==========================================================================

// v0.0.6-1-g76f70dc
// 76f70dc (2014-03-31 00:10:52 -0700)

!function(){var a;"undefined"==typeof a&&(a=Ember.Namespace.create({VERSION:"0.0.6"}),"undefined"!=typeof window&&(window.FP=a),Ember.libraries&&Ember.libraries.registerCoreLibrary("Fireplace",a.VERSION))}(),function(){var a=Ember.get;FP.Utils=FP.Utils||{},FP.Utils.expandPath=function(b,c){return b.replace(/{{([^}]+)}}/g,function(b,d){var e=a(c,d);return e})}}(),function(){var a=Ember.get,b=Ember.isNone,c=FP.Utils.expandPath;FP.hasMany=function(d,e){1===arguments.length&&"object"==typeof d&&(e=d,d=void 0),e=e||{},void 0===e.embedded&&(e.embedded=!0);var f={type:d,isRelationship:!0,kind:"hasMany",options:e};return Ember.computed(function(d,g){var h,i;if(arguments.length>1){if(b(g))return null;h=g}else if(!e.detached){var j=this.relationshipKeyFromName(d),k=a(this,"_snapshot");i=k&&k.child(j)}var l=a(this,"store"),m=a(this,"container"),n=e.collection||(e.embedded?"object":"indexed"),o=m.lookupFactory("collection:"+n),p=e.query;"function"==typeof p&&(p=p.call(this));var q={content:h,store:l,model:f.type,query:p,as:e.as,startAt:e.startAt,endAt:e.endAt,limit:e.limit};if(e.detached){var r,s=l.modelFor(f.type);if(e.path){var t=e.path;t="function"==typeof t?t.call(this):c(t,this),r=s.buildFirebaseRootReference(l).child(t)}else r=s.buildFirebaseReference(l,p);q.firebaseReference=r}else q.parent=this,q.parentKey=d,q.snapshot=i;return g=o.create(q),a(this,"isListeningToFirebase")&&1===arguments.length&&g.listenToFirebase(),g}).property().meta(f)}}(),function(){var a=Ember.get,b=Ember.isNone;FP.hasOne=function(c,d){1===arguments.length&&"object"==typeof c&&(d=c,c=void 0),d=d||{},void 0!==d.embedded||d.detached||(d.embedded=!0);var e={type:c,isRelationship:!0,kind:"hasOne",options:d};return Ember.computed(function(c,f){if(arguments.length>1)return b(f)?null:(d.embedded&&f.setProperties({parent:this,parentKey:c}),f);var g,h=a(this,"store"),i=a(this,"_snapshot");if(!d.detached){var j=this.relationshipKeyFromName(c);if(g=i&&i.child(j),!g||!g.val())return null}if(d.embedded)return f=h.createRecord(e.type,{snapshot:g,parent:this,parentKey:c}),a(this,"isListeningToFirebase")&&f.listenToFirebase(),f;var k;if(d.detached)k=d.id||a(this,"id"),"function"==typeof k&&(k=k.call(this));else if(k=g.val(),!k)return null;var l=d.query;return"function"==typeof l&&(l=l.call(this)),h.findOne(e.type,k,l)}).property().meta(e)}}(),function(){FP.Transform=Ember.Object.extend({serialize:Ember.required(),deserialize:Ember.required()}),FP.Transform.reopenClass({deserialize:function(a,b,c,d){return FP.Transform.transform("deserialize",a,b,c,d)},serialize:function(a,b,c,d){return FP.Transform.transform("serialize",a,b,c,d)},transform:function(a,b,c,d,e){var f=d.type,g=d.options;if(g[a])return g[a].call(b,c);if(!f||!e)return c;var h=e.lookup("transform:"+f);return h?h[a](c,g,e):c}})}(),function(){var a=Ember.isNone;FP.StringTransform=FP.Transform.extend({deserialize:function(b){return a(b)?null:String(b)},serialize:function(b){return a(b)?null:String(b)}})}(),function(){FP.BooleanTransform=FP.Transform.extend({deserialize:function(a){return Boolean(a)},serialize:function(a){return Boolean(a)}})}(),function(){Ember.Date=Ember.Date||{};var a=Date.parse,b=[1,4,5,6,7,10,11];Ember.Date.parse=function(c){var d,e,f=0;if(e=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(c)){for(var g,h=0;g=b[h];++h)e[g]=+e[g]||0;e[2]=(+e[2]||1)-1,e[3]=+e[3]||1,"Z"!==e[8]&&void 0!==e[9]&&(f=60*e[10]+e[11],"+"===e[9]&&(f=0-f)),d=Date.UTC(e[1],e[2],e[3],e[4],e[5]+f,e[6],e[7])}else d=a?a(c):0/0;return d},(Ember.EXTEND_PROTOTYPES===!0||Ember.EXTEND_PROTOTYPES.Date)&&(Date.parse=Ember.Date.parse)}(),function(){FP.DateTransform=FP.Transform.extend({deserialize:function(a){return a&&"string"==typeof a?new Date(Ember.Date.parse(a)):null},serialize:function(a){return a&&a.toISOString?a.toISOString():null}})}(),function(){function a(a,b,c,d){if(!b)return null;if(!c||!c.of)return b;var e,f=d.lookup("transform:"+c.of),g={};for(e in b)g[e]=f[a](b[e],c,d);return g}FP.HashTransform=FP.Transform.extend({serialize:function(b,c,d){return a("serialize",b,c,d)},deserialize:function(b,c,d){return a("deserialize",b,c,d)}})}(),function(){var a=Ember.isEmpty;FP.NumberTransform=FP.Transform.extend({deserialize:function(b){return a(b)?null:Number(b)},serialize:function(b){return a(b)?null:Number(b)}})}(),function(){FP.TimestampTransform=FP.Transform.extend({deserialize:function(a){return a?new Date(a):null},serialize:function(a){return a&&a.getTime?a.getTime():null}})}(),function(){function a(a,b){return"function"==typeof b.default?b.default.call(a):b.default}var b=Ember.get,c=FP.Transform.deserialize,d=Ember.isNone;FP.attr=function(e,f){1===arguments.length&&"object"==typeof e&&(f=e,e="string"),f=f||{};var g={type:e,isAttribute:!0,options:f};return Ember.computed(function(e,h){var i=b(this,"container");if(arguments.length>1)return d(h)&&(h=a(this,f)),h;var j=this.attributeKeyFromName(e),k=b(this,"snapshot");return h=k&&k.val()[j],h=d(h)?a(this,f):c(this,h,g,i)}).property().meta(g)}}(),function(){function a(a,b){return b&&b.options.key?b.options.key:d(a)}function b(a,b){var c=b.type;return c||"hasMany"!==b.kind?c||(c=a):c=e(a),c}var c=Ember.get,d=Ember.String.underscore,e=Ember.String.singularize;FP.RelationshipsClassMixin=Ember.Mixin.create({relationships:Ember.computed(function(){var c=Ember.Map.create();return this.eachComputedProperty(function(d,e){e.isRelationship&&(e.name=d,e.key=a(d,e),e.type=b(d,e),c.set(d,e))}),c}),relationshipsByKey:Ember.computed(function(){var c,d=Ember.Map.create();return this.eachComputedProperty(function(e,f){f.isRelationship&&(f.name=e,f.key=c=a(e,f),f.type=b(e,f),d.set(c,f))}),d}),relationshipNameFromKey:function(a){var b=c(this,"relationshipsByKey").get(a);return b&&b.name},relationshipKeyFromName:function(a){var b=c(this,"relationships").get(a);return b&&b.key}}),FP.RelationshipsMixin=Ember.Mixin.create({relationshipNameFromKey:function(a){return this.constructor.relationshipNameFromKey(a)},relationshipKeyFromName:function(a){return this.constructor.relationshipKeyFromName(a)}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.String.classify;FP.LiveMixin=Ember.Mixin.create(Ember.Evented,{isListeningToFirebase:!1,concatenatedProperties:["firebaseEvents"],firebaseEvents:["value"],buildFirebaseReference:function(){},buildFirebaseQuery:function(){return this.buildFirebaseReference()},changeCameFromFirebase:function(){return!!this._settingFromFirebase}.property().volatile(),settingFromFirebase:function(a){this._settingFromFirebase=!0,a.call(this),this._settingFromFirebase=!1},willDestroy:function(){this.stopListeningToFirebase()},listenToFirebase:function(){if(!this.isDestroying&&!this.isDestroyed){if(a(this,"isListeningToFirebase"))return Ember.RSVP.resolve();b(this,"isListeningToFirebase",!0),this._fbEventHandlers={};var c,d=this.buildFirebaseQuery(),e=this;return a(this,"firebaseEvents").forEach(function(a){c=this.buildHandler(a),this._fbEventHandlers[a]=c,d.on(a,c,this)},this),new Ember.RSVP.Promise(function(a){e.one("firebaseValue",function(){a()})},"FP: Value "+d.toString())}},buildHandler:function(a){var b=c(a),d="onFirebase"+b,e="firebase"+b,f=this.store;return function(){var a=arguments;f.enqueueEvent(function(){this.isDestroying||this.isDestroyed||(this.trigger(e,a),this[d].apply(this,a))},this)}},stopListeningToFirebase:function(){if(a(this,"isListeningToFirebase")){b(this,"isListeningToFirebase",!1);var c,d,e=this.buildFirebaseQuery();for(c in this._fbEventHandlers)d=this._fbEventHandlers[c],e.off(c,d,this);this._fbEventHandlers={}}}})}(),function(){function a(a,b){return b&&b.options.key?b.options.key:c(a)}var b=Ember.get,c=Ember.String.underscore;FP.AttributesClassMixin=Ember.Mixin.create({attributes:Ember.computed(function(){var b=Ember.Map.create();return this.eachComputedProperty(function(c,d){d.isAttribute&&(d.name=c,d.key=a(c,d),b.set(c,d))}),b}),attributesByKey:Ember.computed(function(){var b,c=Ember.Map.create();return this.eachComputedProperty(function(d,e){e.isAttribute&&(e.name=d,e.key=b=a(d,e),c.set(b,e))}),c}),eachAttribute:function(a,c){b(this,"attributes").forEach(function(b,d){a.call(c,b,d)},c)},attributeNameFromKey:function(a){var c=b(this,"attributesByKey").get(a);return c&&c.name},attributeKeyFromName:function(a){var c=b(this,"attributes").get(a);return c&&c.key}}),FP.AttributesMixin=Ember.Mixin.create({eachAttribute:function(a,b){this.constructor.eachAttribute(a,b)},attributeNameFromKey:function(a){return this.constructor.attributeNameFromKey(a)},attributeKeyFromName:function(a){return this.constructor.attributeKeyFromName(a)}})}(),function(){FP.MutableSnapshot=function(a){this.snapshot=a,this.data=a?a.val():{}},FP.MutableSnapshot.prototype.name=function(){return this.snapshot.name()},FP.MutableSnapshot.prototype.val=function(){return this.data},FP.MutableSnapshot.prototype.getPriority=function(){return this.snapshot.getPriority()},FP.MutableSnapshot.prototype.numChildren=function(){return this.snapshot.numChildren()},FP.MutableSnapshot.prototype.ref=function(){return this.snapshot.ref()},FP.MutableSnapshot.prototype.set=function(a,b){return this.data[a]=b,b},FP.MutableSnapshot.prototype.child=function(a){return this.snapshot.child(a)}}(),function(){var a=Ember.get,b=Ember.set,c=Ember.cacheFor,d=Ember.isNone,e=FP.Transform.serialize;FP.ModelClassMixin=Ember.Mixin.create(FP.AttributesClassMixin,FP.RelationshipsClassMixin),FP.ModelMixin=Ember.Mixin.create(FP.LiveMixin,FP.AttributesMixin,FP.RelationshipsMixin,Ember.Evented,{firebaseEvents:["child_added","child_removed","child_changed","value"],store:null,isNew:Ember.computed(function(){return!a(this,"_snapshot")}).property("_snapshot"),_snapshot:null,snapshot:Ember.computed(function(c,d){var e;return arguments.length>1?(b(this,"_snapshot",d),e=d):e=a(this,"_snapshot"),new FP.MutableSnapshot(e)}).property("_snapshot"),willDestroy:function(){var c=a(this,"store");c.teardownRecord(this);var d=a(this,"parent"),e=a(this,"parentKey");!d||d.isDestroyed||d.isDestroying||(d&&e?b(d,e,null):d.removeObject(this)),this._super()},eachActiveRelation:function(b){var d;a(this.constructor,"relationships").forEach(function(a){d=c(this,a),d&&b(d)},this)},listenToFirebase:function(){return a(this,"isListeningToFirebase")||this.eachActiveRelation(function(a){a.listenToFirebase()}),this._super()},stopListeningToFirebase:function(){return a(this,"isListeningToFirebase")&&this.eachActiveRelation(function(a){a.stopListeningToFirebase()}),this._super()},setAttributeFromSnapshot:function(b,c){var d=b.name(),e=this.attributeNameFromKey(d);if(e){var f,g=a(this,"snapshot"),h=g.val();f=c?null:b.val(),h.hasOwnProperty(d)&&h[d]===f||(g.set(d,f),this.settingFromFirebase(function(){this.notifyPropertyChange(e)}))}},notifyRelationshipOfChange:function(b,c){var d=b.name(),e=this.relationshipNameFromKey(d);if(e){var f;f=c?null:b.val(),a(this,"snapshot").set(d,f);var g=this.constructor.metaForProperty(e);"hasOne"===g.kind&&this.settingFromFirebase(function(){this.notifyPropertyChange(e)})}},onFirebaseChildAdded:function(a){this.setAttributeFromSnapshot(a),this.notifyRelationshipOfChange(a)},onFirebaseChildRemoved:function(a){this.setAttributeFromSnapshot(a,!0),this.notifyRelationshipOfChange(a,!0)},onFirebaseChildChanged:function(a){this.setAttributeFromSnapshot(a)},onFirebaseValue:function(a){a&&!a.val()?this.destroy():b(this,"_snapshot",a)},update:function(a,c){return b(this,a,c),this.save(a)},save:function(b){return a(this,"store").saveRecord(this,b)},"delete":function(){return a(this,"store").deleteRecord(this)},toFirebaseJSON:function(b){var f,g,h=a(this.constructor,"attributes"),i=a(this.constructor,"relationships"),j=a(this,"container"),k=a(this,"_snapshot"),l={};return h.forEach(function(b,c){g=a(this,b),d(g)||(l[this.attributeKeyFromName(b)]=e(this,g,c,j))},this),i.forEach(function(b,e){if(!e.options.detached){if(f=this.relationshipKeyFromName(b),g=c(this,b),void 0===g&&k)g=k.child(f).exportVal();else{if(d(g))return;g="hasOne"===e.kind&&e.options.embedded===!1?a(g,"id"):g.toFirebaseJSON(!0)}l[f]=g}},this),b?this.wrapValueAndPriority(l):l},wrapValueAndPriority:function(b){var c=a(this,"priority");return d(c)?b:{".value":b,".priority":c}}})}(),function(){var a=Ember.get,b=FP.Utils.expandPath;FP.Model=Ember.Object.extend(FP.ModelMixin,{id:function(b,c){if(c)return c;var d=a(this,"store");return this.constructor.buildFirebaseRootReference(d).push().name()}.property(),debugReference:function(){return this.buildFirebaseReference().toString()}.property(),buildFirebaseReference:function(){var b,c=a(this,"id"),d=a(this,"parent"),e=a(this,"parentKey");if(d&&e){var f=d.relationshipKeyFromName(e);return d.buildFirebaseReference().child(f)}if(d)b=d.buildFirebaseReference();else{var g=a(this,"store");b=this.constructor.buildFirebaseReference(g,this)}return b.child(c)}}),FP.Model.reopenClass(FP.ModelClassMixin,{firebasePath:function(){var a=this.toString().split(".").pop();return Ember.String.pluralize(Ember.String.underscore(a))},typeFromSnapshot:function(){return this},buildFirebaseRootReference:function(a){return a.buildFirebaseRootReference()},buildFirebaseReference:function(a,c){c=c||{};var d=this.firebasePath;if("function"==typeof d?(c instanceof Ember.Object||(c=Ember.Object.create(c)),d=d.call(this,c)):"string"==typeof d&&(d=b(d,c)),d instanceof Firebase)return d;var e=this.buildFirebaseRootReference(a);return e.child(d)}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.getProperties;FP.Collection=Ember.ArrayProxy.extend(FP.LiveMixin,{firebaseEvents:["child_added","child_removed","child_moved","value"],model:null,parent:null,parentKey:null,snapshot:null,query:null,startAt:null,endAt:null,limit:null,onFirebaseChildAdded:Ember.required,onFirebaseChildRemoved:Ember.required,onFirebaseChildMoved:Ember.required,toFirebaseJSON:Ember.required,isNew:Ember.computed(function(){return!a(this,"snapshot")}).property("snapshot"),firebaseReference:null,debugReference:function(){return this.buildFirebaseReference().toString()}.property(),buildFirebaseReference:function(){var b=a(this,"firebaseReference");if(b)return b;var c=a(this,"firebasePath"),d=a(this,"store");if(c){var e=d.buildFirebaseRootReference();return e.child(c)}var f=a(this,"parent"),g=a(this,"parentKey");if(f&&g){var h=f.relationshipKeyFromName(g);return f.buildFirebaseReference().child(h)}var i=a(this,"model"),j=d.modelFor(i);return j.buildFirebaseReference(d)},buildFirebaseQuery:function(){var a=this.buildFirebaseReference(),b=c(this,"startAt","endAt","limit");return b.startAt&&(a=a.startAt(b.startAt)),b.endAt&&(a=a.endAt(b.endAt)),b.limit&&(a=a.limit(b.limit)),a},modelClassFromSnapshot:function(b){var c=a(this,"model"),d=this.store.modelFor(c);return d.typeFromSnapshot(b)},onFirebaseValue:function(a){b(this,"snapshot",a)},setupContent:Ember.on("init",function(){a(this,"content")||b(this,"content",[])}),insertAfter:function(a,b,c){c=c||this;var d,e;a?(d=c.findProperty("id",a),d?(e=c.indexOf(d),c.insertAt(e+1,b)):c.pushObject(b)):c.unshiftObject(b)}})}(),function(){var a=Ember.get,b=Ember.set;FP.ObjectCollection=FP.Collection.extend({toFirebaseJSON:function(){return this.reduce(function(b,c){return b[a(c,"id")]=c.toFirebaseJSON(!0),b},{})},inflateFromSnapshot:Ember.on("init",function(){var c=a(this,"snapshot");if(c){var d=[],e=this;c.forEach(function(a){d.push(e.modelFromSnapshot(a))}),b(this,"content",d)}}),listenToFirebase:function(){return this.invoke("listenToFirebase"),this._super()},stopListeningToFirebase:function(){return this.invoke("stopListeningToFirebase"),this._super()},replaceContent:function(a,b,c){return this.setupParentage(c),this._super(a,b,c)},hasLoadedAllChildren:function(){var b=a(this,"snapshot");return b&&b.numChildren()===a(this,"length")}.property("length","snapshot"),fetch:function(){if(a(this,"hasLoadedAllChildren"))return Ember.RSVP.resolve(this);var b=this;return new Ember.RSVP.Promise(function(c){var d=function(){a(b,"hasLoadedAllChildren")&&(b.removeObserver("hasLoadedAllChildren",b,d),c(b))};b.addObserver("hasLoadedAllChildren",b,d),a(this,"isListeningToFirebase")||b.listenToFirebase()})},contentChanged:function(){this.setupParentage(this)}.observes("content").on("init"),setupParentage:function(a){a.forEach(function(a){a.setProperties({parent:this,parentKey:null})},this)},modelFromSnapshot:function(b){var c=(b.name(),this.modelClassFromSnapshot(b)),d=a(this,"store"),e=a(this,"query")||{};return d.findInCacheOrCreateRecord(c,b.ref(),Ember.merge({snapshot:b,priority:b.getPriority()},e))},onFirebaseChildAdded:function(a,b){var c=a.name();if(!this.findBy("id",c)){var d=this.modelFromSnapshot(a);this.insertAfter(b,d),d.listenToFirebase()}},onFirebaseChildRemoved:function(a){var b=this.findBy("id",a.name());b&&(this.removeObject(b),b.stopListeningToFirebase())},onFirebaseChildMoved:function(a,c){var d=this.findBy("id",a.name());d&&(this.removeObject(d),b(d,"priority",a.getPriority()),this.insertAfter(c,d))}})}(),function(){var a=Ember.get,b=Ember.isNone;FP.MetaModel=Ember.ObjectProxy.extend(FP.ModelMixin,{id:Ember.computed.alias("content.id"),priority:null,parent:null,parentKey:null,meta:Ember.computed(function(b,c){var d=a(this.constructor,"attributes"),e=a(this.constructor,"relationships");if(d.length||e.length)return null;if(arguments.length>1)return c;var f=a(this,"_snapshot");return f?f.val():null}).property("_snapshot"),buildFirebaseReference:function(){var b=a(this,"id"),c=a(this,"parent");return c.buildFirebaseReference().child(b)},toFirebaseJSON:function(c){var d=a(this.constructor,"attributes"),e=a(this.constructor,"relationships");if(d.length||e.length){var f=this._super(c);if(!jQuery.isEmptyObject(f))return f}var g=a(this,"meta");return b(g)&&(g=!0),c?this.wrapValueAndPriority(g):g},saveContent:function(){return this.get("content").save()}}),FP.MetaModel.reopenClass(FP.ModelClassMixin)}(),function(){var a=Ember.get,b=Ember.set;FP.IndexedCollection=FP.Collection.extend({firebaseEvents:"child_changed",as:null,toFirebaseJSON:function(){var b;return this.reduce(function(c,d){return b=d instanceof FP.MetaModel?d.toFirebaseJSON(!0):!0,c[a(d,"id")]=b,c},{})},inflateFromSnapshot:Ember.on("init",function(){var c=a(this,"snapshot");if(c){var d=[],e=this;c.forEach(function(a){d.push(e.itemFromSnapshot(a))}),b(this,"content",d)}}),contentChanged:function(){if(!this._updatingContent){var c=a(this,"content");if(c){var d=!1,e=c.map(function(a){return a instanceof Ember.Object&&(a=this.itemFromRecord(a),d=!0),a},this);d&&(this._updatingContent=!0,b(this,"content",e),this._updatingContent=!1)}}}.observes("content").on("init"),listenToFirebase:function(){return a(this,"as")&&this.invoke("listenToFirebase"),this._super()},stopListeningToFirebase:function(){return a(this,"as")&&this.invoke("stopListeningToFirebase"),this._super()},hasLoadedAllChildren:function(){var b=a(this,"snapshot");if(!b||b.numChildren()!==a(this,"length"))return!1;var c=a(this,"content");return c.every(function(a){return!!a.record})}.property("length","snapshot"),fetch:function(){if(a(this,"hasLoadedAllChildren"))return Ember.RSVP.resolve(this);var b=this;return this.listenToFirebase().then(function(){var c=a(b,"content"),d=c.map(function(a,c){return b.objectAtContentAsPromise(c)});return Ember.RSVP.all(d)}).then(function(){return b})},itemFromSnapshot:function(a){return{id:a.name(),snapshot:a,record:null}},itemFromRecord:function(b){return{id:a(b,"id"),snapshot:null,record:this.wrapRecordInMetaObjectIfNeccessary(b)}},replaceContent:function(a,b,c){return c=c.map(function(a){return a instanceof FP.MetaModel?(a.set("parent",this),this.itemFromRecord(a)):a instanceof Ember.Object?this.itemFromRecord(a):a},this),this._super(a,b,c)},objectAtContent:function(b){var c=a(this,"content");if(c&&c.length){var d=c.objectAt(b);if(d)return d.record?d.record:(d.record=this.findFetchRecordFromItem(d,!1),d.record)}},objectAtContentAsPromise:function(b){var c=a(this,"content");if(!c||!c.length)return Ember.RSVP.reject();var d=c.objectAt(b);if(!d)return Ember.RSVP.reject();if(d.record)return Ember.RSVP.resolve(d.record);var e=this.findFetchRecordFromItem(d,!0);return e.then(function(a){return d.record=a,d.record})},findFetchRecordFromItem:function(b,c){var d,e=a(this,"store"),f=a(this,"query"),g=this.modelClassFromSnapshot(b.snapshot),h=this;return c?(d=e.fetchOne(g,b.id,f),d.then(function(a){return h.wrapRecordInMetaObjectIfNeccessary(a,b.snapshot)})):(d=e.findOne(g,b.id,f),this.wrapRecordInMetaObjectIfNeccessary(d,b.snapshot))},wrapRecordInMetaObjectIfNeccessary:function(b,c){var d=a(this,"as");if(!d||b instanceof FP.MetaModel)return b;var e=a(this,"store"),f=c?c.getPriority():null,g=e.buildRecord(d,null,{content:b,priority:f,snapshot:c,parent:this});return c&&g.listenToFirebase(),g},onFirebaseChildAdded:function(b,c){var d=b.name(),e=a(this,"content");if(!e.findBy("id",d)){var f=this.itemFromSnapshot(b);this.insertAfter(c,f,e)}},onFirebaseChildRemoved:function(b){var c=a(this,"content"),d=c.findBy("id",b.name());d&&c.removeObject(d)},onFirebaseChildMoved:function(c,d){var e=a(this,"content"),f=e.findBy("id",c.name());f&&(e.removeObject(f),a(this,"as")&&f.record&&b(f.record,"priority",c.getPriority()),this.insertAfter(d,f,e))},onFirebaseChildChanged:function(b){var c=a(this,"content"),d=c.findBy("id",b.name());if(d){var e=c.indexOf(d),f=this.itemFromSnapshot(b);c.replace(e,1,[f])}}})}(),function(){function a(a,c){c.then(function(c){b(a,"isFulfilled",!0),c._settingFromFirebase=!0,b(a,"content",c),c._settingFromFirebase=!1},function(c){b(a,"isRejected",!0),b(a,"reason",c)})}var b=Ember.set,c=Ember.get,d=Ember.RSVP.resolve;FP.PromiseModel=Ember.ObjectProxy.extend(Ember.PromiseProxyMixin,{_setupContentForwarding:function(){var a=c(this,"content");if(a)for(var b in a)this[b]||"function"!=typeof a[b]||this._forwardToContent(b)}.observes("content").on("init"),_forwardToContent:function(a){this[a]=function(){var b=this.get("content");return b[a].apply(b,arguments)}},promise:Ember.computed(function(b,c){if(2===arguments.length)return c=d(c),a(this,c),c.then();throw new Ember.Error("PromiseProxy's promise must be set")})})}(),function(){Ember.String.classify;FP.FirebaseEventQueue=function(){this.pending=[]},FP.FirebaseEventQueue.prototype={enqueue:function(a,b){if(this.pending.push([a,b]),!this.running){this.running=!0;var c=Ember.testing?Ember.run:Ember.run.next;c(this,this.flush)}},flush:function(){var a,b;this.pending.forEach(function(c){b=c[0],a=c[1],b.call(a)}),this.pending=[],this.running=!1}}}(),function(){var a=Ember.get,b=Ember.set,c=Ember.guidFor;FP.Store=Ember.Object.extend({firebaseRoot:null,init:function(){this._super(),this.clearCache(),this.queue=new FP.FirebaseEventQueue},enqueueEvent:function(a,b){this.queue.enqueue(a,b)},fork:function(){return this.constructor.create({container:a(this,"container")})},buildFirebaseRootReference:function(){var b=a(this,"firebaseRoot");return b instanceof Firebase?b:new Firebase(b)},createRecord:function(a,b){b=b||{};var c=this.buildRecord(a,b.id,b);return this.storeInCache(a,c),c},saveRecord:function(b,c){var d=b.buildFirebaseReference(),e=a(b,"priority"),f=b.toFirebaseJSON(),g=this;return b.trigger("save"),new Ember.RSVP.Promise(function(a,h){var i=function(d){g.enqueueEvent(function(){d?h(d):(c||g.storeInCache(b.constructor,b),b.listenToFirebase(),a(b),b.trigger("saved"))})};if(c)if("priority"!==c){var j=b.attributeKeyFromName(c)||b.relationshipKeyFromName(c),k=f[j];k?d.child(j).set(k,i):d.child(j).remove(i)}else d.setPriority(e,i);else e?d.setWithPriority(f,e,i):d.set(f,i)},"FP: Save "+d.toString())},deleteRecord:function(a){var b=a.buildFirebaseReference(),c=this;return a.trigger("delete"),new Ember.RSVP.Promise(function(d,e){b.remove(function(b){c.enqueueEvent(function(){b?e(b):(a.stopListeningToFirebase(),d(a),a.trigger("deleted"))})})},"FP: Delete "+b.toString())},find:function(a,b,c){return 1===arguments.length?this.findAll(a):"object"==typeof b?this.findQuery(a,b,c):this.findOne(a,b,c)},fetch:function(a,b,c){return 1===arguments.length?this.fetchAll(a):"object"==typeof b?this.fetchQuery(a,b,c):this.fetchOne(a,b,c)},findOne:function(a,b,c){return this.findFetchOne(a,b,c,!1)},fetchOne:function(a,b,c){return this.findFetchOne(a,b,c,!0)},findQuery:function(a,b,c){return this.findFetchQuery(a,b,c,!1)},fetchQuery:function(a,b,c){return this.findFetchQuery(a,b,c,!0)},findAll:function(a,b){return this.findFetchQuery(a,b,{},!1)},fetchAll:function(a,b){return this.findFetchQuery(a,b,{},!0)},findFetchQuery:function(a,b,c,d){c=c||{},b=b||{},(b.startAt||b.endAt||b.limit||b.path||b.collection)&&(c=b,b={});var e,f=this.modelFor(a);return e=c.path?f.buildFirebaseRootReference(this).child(c.path):f.buildFirebaseReference(this,b),this.findFetchCollectionByReference(f,e,b,c,d)},findFetchOne:function(a,b,c,d){c=c||{};var e,f=this.buildRecord(a,b,c),g=f.buildFirebaseReference(),h=this.findInCacheByReference(a,g);if(h)return h.listenToFirebase(),e=Ember.RSVP.resolve(h),d?e:FP.PromiseModel.create({content:h,promise:e});var i=this;return e=new Ember.RSVP.Promise(function(d,e){g.once("value",function(g){i.enqueueEvent(function(){var h=g.val();if(h){var j=i.modelFor(a).typeFromSnapshot(g);f=i.createRecord(j,Ember.merge(c,{id:b,snapshot:g})),f.listenToFirebase(),d(f)}else e("not found")})},function(){e("permission denied")})},"FP: Find one "+g.toString()),d?e:FP.PromiseModel.create({promise:e,content:f})},findFetchCollectionByReference:function(c,d,e,f,g){var h,i,j,k=a(this,"container"),l=f.collection||"object",m=k.lookupFactory("collection:"+l),n=this;return h=m.create({store:this,model:c,query:e,firebaseReference:d,startAt:f.startAt,endAt:f.endAt,limit:f.limit}),j=h.buildFirebaseQuery(),i=new Ember.RSVP.Promise(function(a,c){j.once("value",function(c){n.enqueueEvent(function(){b(h,"snapshot",c),h.inflateFromSnapshot(),h.listenToFirebase(),a(h)})},function(){c("permission denied")})},"FP: Find many "+j.toString()),g?i:h},modelFor:function(b){var c;return c="string"==typeof b?a(this,"container").lookupFactory("model:"+b):b},buildRecord:function(b,c,d){var e,f=a(this,"container"),g=this.modelFor(b);return e=g.create({store:this,container:f}),d&&e.setProperties(d),c&&e.set("id",c),e},clearCache:function(){this.cache={}},cacheForType:function(a){var b=this.modelFor(a),d=c(b),e=this.cache[d];return e?e:(e={records:{}},this.cache[d]=e,e)},storeInCache:function(a,b){if(!(b instanceof FP.MetaModel)){var c=this.cacheForType(a),d=b.buildFirebaseReference().toString();c.records[d]=b}},teardownRecord:function(a){var b=this.cacheForType(a.constructor),c=a.buildFirebaseReference().toString();delete b.records[c]},findInCacheByReference:function(a,b){var c=this.cacheForType(a);return c.records[b.toString()]},findInCacheOrCreateRecord:function(a,b,c){var d=this.findInCacheByReference(a,b);return d?d:(c.id=b.name(),this.createRecord(a,c))},all:function(a){var b,c=this.cacheForType(a),d=c.records,e=[];for(b in d)e.push(d[b]);return e}})}(),function(){var a=Ember.get,b=Ember.String.capitalize,c=Ember.String.underscore;FP.DebugAdapter=Ember.DataAdapter.extend({getFilters:function(){return[{name:"isLive",desc:"Live"},{name:"isNew",desc:"New"}]},detect:function(a){return a!==FP.Model&&FP.Model.detect(a)},columnsForType:function(d){var e=[{name:"id",desc:"Id"}],f=0,g=this;return a(d,"attributes").forEach(function(a){if(f++>g.attributeLimit)return!1;var d=b(c(a).replace("_"," "));e.push({name:a,desc:d})}),e.push({name:"fbPath",desc:"Firebase Path"}),e},getRecords:function(a){return this.get("store").all(a)},recordReferenceToString:function(a){var b=a.buildFirebaseReference(),c=b.root().toString();return b.toString().slice(c.length)},getRecordColumnValues:function(b){var c=this,d=0,e={id:a(b,"id"),fbPath:this.recordReferenceToString(b)};return b.eachAttribute(function(f){if(d++>c.attributeLimit)return!1;var g=a(b,f);e[f]=g}),e},getRecordKeywords:function(b){var c=[],d=Ember.A(["id"]);return b.eachAttribute(function(a){d.push(a)}),d.forEach(function(d){c.push(a(b,d))}),c},getRecordFilterValues:function(a){return{isLive:a.get("isListeningToFirebase"),isNew:a.get("isNew")}},getRecordColor:function(a){var b="black";return a.get("isListeningToFirebase")?b="green":a.get("isNew")&&(b="blue"),b},observeRecord:function(a,b){var c=Ember.A(),d=this,e=Ember.A(["id","isListeningToFirebase","isNew"]);a.eachAttribute(function(a){e.push(a)}),e.forEach(function(e){var f=function(){b(d.wrapRecord(a))};Ember.addObserver(a,e,f),c.push(function(){Ember.removeObserver(a,e,f)})});var f=function(){c.forEach(function(a){a()})};return f}})}(),function(){Ember.onLoad("Ember.Application",function(a){a.initializer({name:"store",initialize:function(a,b){b.register("store:main",b.Store||FP.Store),a.lookup("store:main")}}),a.initializer({name:"transforms",initialize:function(a,b){b.register("transform:boolean",FP.BooleanTransform),b.register("transform:date",FP.DateTransform),b.register("transform:timestamp",FP.TimestampTransform),b.register("transform:number",FP.NumberTransform),b.register("transform:hash",FP.HashTransform),b.register("transform:string",FP.StringTransform)}}),a.initializer({name:"data-adapter",initialize:function(a,b){b.register("data-adapter:main",FP.DebugAdapter)}}),a.initializer({name:"collections",initialize:function(a,b){b.register("collection:object",FP.ObjectCollection),b.register("collection:indexed",FP.IndexedCollection)}}),a.initializer({name:"injectStore",initialize:function(a,b){b.inject("controller","store","store:main"),b.inject("route","store","store:main"),b.inject("data-adapter","store","store:main"),b.inject("collection","store","store:main"),b.inject("component","store","store:main")}})})}();